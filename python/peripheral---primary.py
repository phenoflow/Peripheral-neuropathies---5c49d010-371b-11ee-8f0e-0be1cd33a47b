# Kuan V, Denaxas S, Gonzalez-Izquierdo A, Direk K, Bhatti O, Husain S, Sutaria S, Hingorani M, Nitsch D, Parisinos C, Lumbers T, Mathur R, Sofat R, Casas JP, Wong I, Hemingway H, Hingorani A, 2023.

import sys, csv, re

codes = [{"code":"100064.0","system":"med"},{"code":"10082.0","system":"med"},{"code":"101311.0","system":"med"},{"code":"105825.0","system":"med"},{"code":"106103.0","system":"med"},{"code":"107099.0","system":"med"},{"code":"10722.0","system":"med"},{"code":"107322.0","system":"med"},{"code":"108834.0","system":"med"},{"code":"109197.0","system":"med"},{"code":"109865.0","system":"med"},{"code":"110363.0","system":"med"},{"code":"110567.0","system":"med"},{"code":"11106.0","system":"med"},{"code":"11542.0","system":"med"},{"code":"12097.0","system":"med"},{"code":"1254.0","system":"med"},{"code":"14741.0","system":"med"},{"code":"14883.0","system":"med"},{"code":"14884.0","system":"med"},{"code":"15481.0","system":"med"},{"code":"15808.0","system":"med"},{"code":"1607.0","system":"med"},{"code":"16293.0","system":"med"},{"code":"16452.0","system":"med"},{"code":"16491.0","system":"med"},{"code":"16540.0","system":"med"},{"code":"17247.0","system":"med"},{"code":"18025.0","system":"med"},{"code":"18075.0","system":"med"},{"code":"18230.0","system":"med"},{"code":"18425.0","system":"med"},{"code":"18534.0","system":"med"},{"code":"19454.0","system":"med"},{"code":"2002.0","system":"med"},{"code":"2073.0","system":"med"},{"code":"21781.0","system":"med"},{"code":"2219.0","system":"med"},{"code":"22921.0","system":"med"},{"code":"23393.0","system":"med"},{"code":"2342.0","system":"med"},{"code":"23435.0","system":"med"},{"code":"23636.0","system":"med"},{"code":"23656.0","system":"med"},{"code":"24121.0","system":"med"},{"code":"24216.0","system":"med"},{"code":"24222.0","system":"med"},{"code":"24226.0","system":"med"},{"code":"24331.0","system":"med"},{"code":"24355.0","system":"med"},{"code":"24571.0","system":"med"},{"code":"24606.0","system":"med"},{"code":"24694.0","system":"med"},{"code":"26124.0","system":"med"},{"code":"26420.0","system":"med"},{"code":"27805.0","system":"med"},{"code":"2790.0","system":"med"},{"code":"28333.0","system":"med"},{"code":"28901.0","system":"med"},{"code":"2925.0","system":"med"},{"code":"29343.0","system":"med"},{"code":"29630.0","system":"med"},{"code":"30537.0","system":"med"},{"code":"31551.0","system":"med"},{"code":"31709.0","system":"med"},{"code":"31790.0","system":"med"},{"code":"32527.0","system":"med"},{"code":"32949.0","system":"med"},{"code":"33841.0","system":"med"},{"code":"34698.0","system":"med"},{"code":"35385.0","system":"med"},{"code":"35395.0","system":"med"},{"code":"35465.0","system":"med"},{"code":"35537.0","system":"med"},{"code":"35785.0","system":"med"},{"code":"37315.0","system":"med"},{"code":"3736.0","system":"med"},{"code":"38401.0","system":"med"},{"code":"39528.0","system":"med"},{"code":"3958.0","system":"med"},{"code":"39692.0","system":"med"},{"code":"39809.0","system":"med"},{"code":"39858.0","system":"med"},{"code":"40751.0","system":"med"},{"code":"40962.0","system":"med"},{"code":"41652.0","system":"med"},{"code":"41716.0","system":"med"},{"code":"4174.0","system":"med"},{"code":"4239.0","system":"med"},{"code":"42750.0","system":"med"},{"code":"43063.0","system":"med"},{"code":"43077.0","system":"med"},{"code":"44033.0","system":"med"},{"code":"44095.0","system":"med"},{"code":"44113.0","system":"med"},{"code":"44512.0","system":"med"},{"code":"45081.0","system":"med"},{"code":"45467.0","system":"med"},{"code":"46301.0","system":"med"},{"code":"46937.0","system":"med"},{"code":"47409.0","system":"med"},{"code":"47465.0","system":"med"},{"code":"47816.0","system":"med"},{"code":"48078.0","system":"med"},{"code":"48724.0","system":"med"},{"code":"48792.0","system":"med"},{"code":"5002.0","system":"med"},{"code":"50527.0","system":"med"},{"code":"50813.0","system":"med"},{"code":"52089.0","system":"med"},{"code":"5384.0","system":"med"},{"code":"54008.0","system":"med"},{"code":"54124.0","system":"med"},{"code":"54645.0","system":"med"},{"code":"55076.0","system":"med"},{"code":"5584.0","system":"med"},{"code":"56272.0","system":"med"},{"code":"56910.0","system":"med"},{"code":"57313.0","system":"med"},{"code":"58554.0","system":"med"},{"code":"58758.0","system":"med"},{"code":"59344.0","system":"med"},{"code":"60208.0","system":"med"},{"code":"62401.0","system":"med"},{"code":"62674.0","system":"med"},{"code":"62954.0","system":"med"},{"code":"63544.0","system":"med"},{"code":"63555.0","system":"med"},{"code":"6376.0","system":"med"},{"code":"66336.0","system":"med"},{"code":"66965.0","system":"med"},{"code":"67043.0","system":"med"},{"code":"68105.0","system":"med"},{"code":"6884.0","system":"med"},{"code":"68960.0","system":"med"},{"code":"69047.0","system":"med"},{"code":"6908.0","system":"med"},{"code":"70040.0","system":"med"},{"code":"71258.0","system":"med"},{"code":"72320.0","system":"med"},{"code":"72922.0","system":"med"},{"code":"73337.0","system":"med"},{"code":"7635.0","system":"med"},{"code":"7795.0","system":"med"},{"code":"7915.0","system":"med"},{"code":"8267.0","system":"med"},{"code":"8591.0","system":"med"},{"code":"91741.0","system":"med"},{"code":"91943.0","system":"med"},{"code":"93228.0","system":"med"},{"code":"93868.0","system":"med"},{"code":"95351.0","system":"med"},{"code":"96256.0","system":"med"},{"code":"97306.0","system":"med"},{"code":"97449.0","system":"med"},{"code":"97479.0","system":"med"},{"code":"97848.0","system":"med"},{"code":"99231.0","system":"med"}];
REQUIRED_CODES = 1;
with open(sys.argv[1], 'r') as file_in, open('peripheral-neuropathies-potential-cases.csv', 'w', newline='') as file_out:
    csv_reader = csv.DictReader(file_in)
    csv_writer = csv.DictWriter(file_out, csv_reader.fieldnames + ["peripheral---primary-identified"])
    csv_writer.writeheader();
    codes_identified = 0;
    for row in csv_reader:
        newRow = row.copy();
        for cell in row:
            # Iterate cell lists (e.g. codes)
            for item in re.findall(r'\(([^,]*)\,', row[cell]):
                if(item in list(map(lambda code: code['code'], codes))): codes_identified+=1;
                if(codes_identified>=REQUIRED_CODES):
                    newRow["peripheral---primary-identified"] = "CASE";
                    break;
            if(codes_identified>=REQUIRED_CODES): break;
        if(codes_identified<REQUIRED_CODES):
            newRow["peripheral---primary-identified"] = "UNK";
        codes_identified=0;
        csv_writer.writerow(newRow)
